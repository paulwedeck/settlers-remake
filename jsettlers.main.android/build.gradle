apply plugin: 'com.android.application'
apply plugin: 'eclipse'


import org.eclipse.jgit.api.Git
import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.storage.file.FileRepositoryBuilder

ext {
    FileRepositoryBuilder builder = new FileRepositoryBuilder()
    Repository repository = builder.readEnvironment().findGitDir(file('.')).build()
    def des = new Git(repository).describe();
    des.setTags(true);
    versionString = des.call();

    def c = new GregorianCalendar();
    c.setTime(new Date());
    versionId = 0;
    versionId *= 100
    versionId += (c.get(Calendar.YEAR)-2000)

    versionId *= 100
    versionId += c.get(Calendar.MONTH)

    versionId *= 100
    versionId += c.get(Calendar.DAY_OF_MONTH)

    versionId *= 100
    versionId += c.get(Calendar.HOUR_OF_DAY)
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    buildToolsVersion rootProject.ext.androidBuildToolsVersion

    defaultConfig {
        applicationId "jsettlers.main.android"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode versionId
        versionName versionString
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src/main/java']
            resources.srcDirs = ['src/main/resources']
            res.srcDirs = ['src/main/res']
            assets.srcDirs = [project.getRootProject().file('maps/release')]
        }
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        ignoreAssetsPattern "!cache:!logs:!textures_raw:!save:!last-used.properties:!maps/testmaps"
    }

    compileOptions {
        coreLibraryDesugaringEnabled true

        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding = true
    }
}

dependencies {
    implementation project(':go.graphics.android')
    implementation project(':go.graphics')
    implementation project(':jsettlers.graphics')
    implementation project(':jsettlers.logic')
    implementation project(':jsettlers.common')

    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation 'com.android.support:appcompat-v7:' + rootProject.ext.androidSupportLibraryVersion
    implementation 'com.android.support:support-v4:' + rootProject.ext.androidSupportLibraryVersion
    implementation 'com.android.support:cardview-v7:' + rootProject.ext.androidSupportLibraryVersion
    implementation 'com.android.support:design:' + rootProject.ext.androidSupportLibraryVersion
    implementation 'com.android.support:support-v4:' + rootProject.ext.androidSupportLibraryVersion
    implementation 'com.android.support:gridlayout-v7:' + rootProject.ext.androidSupportLibraryVersion

    implementation 'biz.laenger.android:vpbs:0.0.5'
    implementation 'me.relex:circleindicator:1.2.2@aar'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.10'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'org.androidannotations:androidannotations-api:' + rootProject.ext.androidAnnotationsVersion
    annotationProcessor 'org.androidannotations:androidannotations:' + rootProject.ext.androidAnnotationsVersion

    // test dependencies
    androidTestImplementation 'com.android.support:support-annotations:' + rootProject.ext.androidSupportLibraryVersion
    androidTestImplementation 'junit:junit:4.12'
    androidTestImplementation 'org.hamcrest:hamcrest-library:1.3'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
}
