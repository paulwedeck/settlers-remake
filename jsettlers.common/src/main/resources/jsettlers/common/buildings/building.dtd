<?xml version="1.0" encoding="UTF-8"?>

<!--
Create new Building (Author: MarviMarv, 13.01.2021)
	1.	Add Building name to enum “EBuildingType” (uppercase name)
	2.	Add Building to related category in enum “EBuildingsCategory”
	3.	Add Building to enum “EOriginalMapBuildingType” (seems to be deprecated though)
	4.	Add CASE for method “createBuilding” in class “Building” depending on the actual type the building is related to (specific building class), you may need to implement a new class
	5.	Create xml at path “jsettlers.common\src\main\resources\jsettlers\common\buildings\egyptian\brewery.xml” with the same name you have used for the “EBuildingType” from step 1 (lowercase name)
	6.  Configure the XML as needed, use the "BuildingCreatorApp" for help, gfx building files for images are 13,23,33,43 and gui 14,24,34,44
	6.	For different language support go to “H: jsettlers.graphics\out\production\resources\jsettlers\graphics\localization\” and add the label for the building which is displayed in game

	ROMAN Building TODOS:
	-

	EGYPTIAN Building TODOS:
	- create brewery building (mana)
	- change temple goods mana ressources
	- add Ballistenwerkstatt
	- adjust dx/dy with BuildingCreatorApp (occupier, flags, blocks ... etc)

 	ASIAN Building TODOS:
	- add mana specific buildings
	- change temple goods mana ressources
	- add Ballistenwerkstatt
	- adjust dx/dy with BuildingCreatorApp (occupier, flags, blocks, required ressources ... etc)

 	AMAZON Building TODOS:
	- add mana specific buildings
	- change temple goods mana ressources
	- add Ballistenwerkstatt
	- adjust dx/dy with BuildingCreatorApp (occupier, flags, blocks, required ressources ... etc)
-->

<!ENTITY % imagelinktype "(SETTLER| GUI| LANDSCAPE)">

<!ENTITY % material "(
	NO_MATERIAL|
	AXE|
	BOW|
	BLADE|
	BREAD|
	COAL|
	CROP|
	FISH|
	FISHINGROD|
	FLOUR|
	GOLD|
	GOLDORE|
	HAMMER|
	IRON|
	IRONORE|
	MEAT|
	PICK|
	PIG|
	PLANK|
	SAW|
	SCYTHE|
	SPEAR|
	STONE|
	SWORD|
	TRUNK|
	WATER|
	WINE|
	MEAD|
	GEMS|
	SULFUR|
	RICE|
	KEG|
	LIQUOR|
	GUN_POWDER|
	CANNON_AMMO|
	BALLISTA_AMMO|
	CATAPULT_AMMO|
	WHITE_BREAD|
	BASKET|
	TREE|
	PLANT|
	HONEY|
	EMPTY_BUCKET)
">
<!ENTITY % jobtype "(
	WAIT|
	WALK|
	SHOW|
	HIDE|
	SET_MATERIAL|
	TAKE|
	TAKE_REQUESTED|
	DROP|
	PRE_SEARCH|
	PRE_SEARCH_IN_AREA|
	REQUEST|
	FOLLOW_SEARCHED|
	GO_TO|
	GO_TO_DOCK|
	BUILD_SHIP|
	LOOK_AT|
	PLAY_ACTION1|
	PLAY_ACTION2|
	PLAY_ACTION3|
	EXECUTE|
	AVAILABLE|
	NOT_FULL|
	LOOK_AT_SEARCHED|
	TRY_TAKING_RESOURCE|
	TRY_TAKING_FOOD|
	SMOKE_ON|
	SMOKE_OFF|
	START_WORKING|
	STOP_WORKING|
	REMOTETAKE|
	PIG_PLACE|
	PIG_REMOVE|
	PIG_IS_ADULT|
	PIG_IS_THERE|
	POP_TOOL|
	POP_WEAPON|
	DROP_POPPED|
	GROW_DONKEY|
	CALL_WOUNDED|
	CAN_HEAL|
	HEAL|
	BUILDING_ANIMATION)
">
<!ENTITY % direction "(EAST| SOUTH_EAST| SOUTH_WEST| WEST | NORTH_WEST | NORTH_EAST)">

<!ENTITY % searchtype "(
	FOREIGN_GROUND|
	CUTTABLE_TREE|
	CUTTABLE_STONE|
	PLANTABLE_TREE|
	PLANTABLE_CORN|
	CUTTABLE_CORN|
	PLANTABLE_WINE|
	HARVESTABLE_WINE|
	PLANTABLE_RICE|
	HARVESTABLE_RICE|
	PLANTABLE_HIVE|
	HARVESTABLE_HIVE|
	FISHABLE|
	RIVER|
	ENEMY)
">
<!ENTITY % groundtype "(
	GRASS|
	DRY_GRASS|
	DESERT|
	EARTH|
	MOUNTAIN|
	SNOW|
	WATER|
	SAND|
	FLATTENED|
	RIVER1|
	RIVER2|
	RIVER3|
	RIVER4|
	MOUNTAINBORDER|
	MOUNTAINBORDEROUTER
)">
<!ENTITY % boolean "(true|false)">

<!ELEMENT building (ground+, blocked+, door, constructionStack+, requestStack*, offerStack*, bricklayer+, flag, buildmark*, workcenter?, image*, occupyer*, startjob?, job*) >

<!ATTLIST building
   	worker CDATA #REQUIRED
	workradius CDATA #IMPLIED
	viewdistance CDATA #IMPLIED
	mine (true|false) "false"
>

<!ELEMENT ground EMPTY>
<!ATTLIST ground
	groundtype %groundtype; #REQUIRED
>

<!ELEMENT workcenter EMPTY>
<!ATTLIST workcenter
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
>

<!ELEMENT blocked EMPTY>
<!ATTLIST blocked
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
   block (true|false) "true"
>

<!ELEMENT door EMPTY>
<!ATTLIST door
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
>


<!ELEMENT flag EMPTY>
<!ATTLIST flag
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
>


<!ELEMENT constructionStack EMPTY>
<!ATTLIST constructionStack
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
   buildrequired CDATA #REQUIRED
   material %material; #REQUIRED
>

<!ELEMENT requestStack EMPTY>
<!ATTLIST requestStack
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
   material %material; #REQUIRED
>

<!ELEMENT offerStack EMPTY>
<!ATTLIST offerStack
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
   material %material; #REQUIRED
>

<!ELEMENT bricklayer EMPTY>
<!ATTLIST bricklayer
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
   direction %direction; #REQUIRED
>

<!ELEMENT occupyer EMPTY>
<!ATTLIST occupyer
   offsetX CDATA #IMPLIED
   offsetY CDATA #IMPLIED
   type (INFANTRY|BOWMAN) #REQUIRED

   soldierX CDATA #REQUIRED
   soldierY CDATA #REQUIRED
   looksRight (true|false) "true"
>

<!ELEMENT startjob EMPTY>
<!ATTLIST startjob
   name IDREF #REQUIRED
>

<!ELEMENT job EMPTY>
<!ATTLIST job
   name ID #REQUIRED
   type %jobtype; #REQUIRED
   successjob IDREF #REQUIRED
   failjob IDREF #REQUIRED
   dx CDATA #IMPLIED
   dy CDATA #IMPLIED
   time CDATA #IMPLIED
   material %material; #IMPLIED
   direction %direction; #IMPLIED
   search %searchtype; #IMPLIED
   takeMaterialFromMap %boolean; #IMPLIED
   foodOrder CDATA #IMPLIED
>

<!ELEMENT image EMPTY>
<!ATTLIST image
   for (GUI|BUILD|FINAL) #REQUIRED
   name CDATA #IMPLIED
   type %imagelinktype; #IMPLIED
   file CDATA #IMPLIED
   sequence CDATA #IMPLIED
   image CDATA #REQUIRED
>

<!ELEMENT buildmark EMPTY>
<!ATTLIST buildmark
   dx CDATA #REQUIRED
   dy CDATA #REQUIRED
>


